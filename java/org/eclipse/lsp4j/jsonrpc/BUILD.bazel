## Copyright (c) 2018 Yannic Bonenberger and others.
##
## This program and the accompanying materials are made available under the
## terms of the Eclipse Public License v. 2.0 which is available at
## http://www.eclipse.org/legal/epl-2.0,
## or the Eclipse Distribution License v. 1.0 which is available at
## http://www.eclipse.org/org/documents/edl-v10.php.

licenses(["reciprocal"])  # Eclipse Public License - v2.0

libraries = [
    ":services_AnnotationUtil",
    ":services_JsonDelegate",
    ":services_JsonNotification",
    ":services_JsonRequest",
    ":services_JsonSegment",
    ":MessageProducer",
    ":MessageIssueException",
    ":MessageIssueHandler",
    ":JsonRpcException",
    ":MessageConsumer",
    ":CancelChecker",
    ":CompletableFutures",
    ":Endpoint",
    ":json_MessageConstants",
    ":json_adapters_CollectionTypeAdapter",
    ":json_adapters_CollectionTypeAdapterFactory",
    ":json_adapters_EitherTypeAdapter",
    ":json_adapters_EitherTypeAdapterFactory",
    ":json_adapters_EnumTypeAdapter",
    ":json_adapters_EnumTypeAdapterFactory",
    ":json_adapters_JsonElementTypeAdapter",
    ":json_adapters_ThrowableTypeAdapter",
    ":json_adapters_TypeUtils",
    ":messages_Either",
    ":messages_Either3",
    ":messages_Message",
    ":messages_MessageIssue",
    ":messages_ResponseErrorCode",
    ":validation_NonNull",
]

java_library(
    name = "jsonrpc",
    srcs = [
        "Launcher.java",
        "RemoteEndpoint.java",
        "ResponseErrorException.java",
        "json/ConcurrentMessageProcessor.java",
        "json/JsonRpcMethod.java",
        "json/JsonRpcMethodProvider.java",
        "json/MessageConstants.java",
        "json/MessageJsonHandler.java",
        "json/MethodProvider.java",
        "json/ResponseJsonAdapter.java",
        "json/StreamMessageConsumer.java",
        "json/StreamMessageProducer.java",
        # Depends on messages.
        "json/adapters/MessageTypeAdapter.java",
        "json/adapters/MessageTypeAdapterFactory.java",
        "messages/AbstractMessage.java",
        "messages/CancelParams.java",
        "messages/IdentifiableMessage.java",
        "messages/NotificationMessage.java",
        "messages/RequestMessage.java",
        "messages/ResponseError.java",
        "messages/ResponseMessage.java",
        "services/EndpointProxy.java",
        "services/GenericEndpoint.java",
        "services/ServiceEndpoints.java",
        "validation/ReflectiveMessageValidator.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    exports = libraries,
    deps = libraries + [
        "@gson//jar",
    ],
)

java_library(
    name = "CancelChecker",
    srcs = [
        "CancelChecker.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

java_library(
    name = "CompletableFutures",
    srcs = [
        "CompletableFutures.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":CancelChecker",
    ],
)

java_library(
    name = "Endpoint",
    srcs = [
        "Endpoint.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

java_library(
    name = "JsonRpcException",
    srcs = [
        "JsonRpcException.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

# "Launcher.java",

java_library(
    name = "MessageConsumer",
    srcs = [
        "MessageConsumer.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":JsonRpcException",
        ":MessageIssueException",
        ":messages_Message",
    ],
)

java_library(
    name = "MessageIssueException",
    srcs = [
        "MessageIssueException.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":messages_Message",
        ":messages_MessageIssue",
    ],
)

java_library(
    name = "MessageIssueHandler",
    srcs = [
        "MessageIssueHandler.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":messages_Message",
        ":messages_MessageIssue",
    ],
)

java_library(
    name = "MessageProducer",
    srcs = [
        "MessageProducer.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":JsonRpcException",
        ":MessageConsumer",
    ],
)

# "MessageProducer.java",
# "RemoteEndpoint.java",
# "ResponseErrorException.java",

################################################################################
## json/adapters

java_library(
    name = "json_adapters_CollectionTypeAdapter",
    srcs = [
        "json/adapters/CollectionTypeAdapter.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":json_adapters_JsonElementTypeAdapter",
        ":json_adapters_TypeUtils",
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_CollectionTypeAdapterFactory",
    srcs = [
        "json/adapters/CollectionTypeAdapterFactory.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":json_adapters_CollectionTypeAdapter",
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_EitherTypeAdapter",
    srcs = [
        "json/adapters/EitherTypeAdapter.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":json_adapters_TypeUtils",
        ":messages_Either",
        ":messages_Either3",
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_EitherTypeAdapterFactory",
    srcs = [
        "json/adapters/EitherTypeAdapterFactory.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":json_adapters_EitherTypeAdapter",
        ":messages_Either",
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_EnumTypeAdapter",
    srcs = [
        "json/adapters/EnumTypeAdapter.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_EnumTypeAdapterFactory",
    srcs = [
        "json/adapters/EnumTypeAdapterFactory.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":json_adapters_EnumTypeAdapter",
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_JsonElementTypeAdapter",
    srcs = [
        "json/adapters/JsonElementTypeAdapter.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        "@gson//jar",
    ],
)

# "json/adapters/MessageTypeAdapter.java",
# "json/adapters/MessageTypeAdapterFactory.java",

java_library(
    name = "json_adapters_ThrowableTypeAdapter",
    srcs = [
        "json/adapters/ThrowableTypeAdapter.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        "@gson//jar",
    ],
)

java_library(
    name = "json_adapters_TypeUtils",
    srcs = [
        "json/adapters/TypeUtils.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":messages_Either",
        "@gson//jar",
    ],
)

################################################################################
## json

java_library(
    name = "json_MessageConstants",
    srcs = [
        "json/MessageConstants.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

################################################################################
## messages

# "messages/AbstractMessage.java",
# "messages/CancelParams.java",

java_library(
    name = "messages_Either",
    srcs = [
        "messages/Either.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":validation_NonNull",
    ],
)

java_library(
    name = "messages_Either3",
    srcs = [
        "messages/Either3.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":messages_Either",
        ":validation_NonNull",
    ],
)

# "messages/IdentifiableMessage.java",

java_library(
    name = "messages_Message",
    srcs = [
        "messages/Message.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":validation_NonNull",
    ],
)

java_library(
    name = "messages_MessageIssue",
    srcs = [
        "messages/MessageIssue.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        ":validation_NonNull",
    ],
)

# "messages/NotificationMessage.java",
# "messages/RequestMessage.java",
# "messages/ResponseError.java",

java_library(
    name = "messages_ResponseErrorCode",
    srcs = [
        "messages/ResponseErrorCode.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

# "messages/ResponseMessage.java",

################################################################################
## services

java_library(
    name = "services_AnnotationUtil",
    srcs = [
        "services/AnnotationUtil.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
    deps = [
        "services_JsonRequest",
        ":services_JsonDelegate",
        ":services_JsonNotification",
        ":services_JsonSegment",
    ],
)

java_library(
    name = "services_JsonDelegate",
    srcs = [
        "services/JsonDelegate.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

java_library(
    name = "services_JsonNotification",
    srcs = [
        "services/JsonNotification.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

java_library(
    name = "services_JsonRequest",
    srcs = [
        "services/JsonRequest.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

java_library(
    name = "services_JsonSegment",
    srcs = [
        "services/JsonSegment.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)

################################################################################
## validation

java_library(
    name = "validation_NonNull",
    srcs = [
        "validation/NonNull.java",
    ],
    # TODO(yannic): Change to "//visibility:public" after removing dep cycles.
    visibility = ["//:__subpackages__"],
)
